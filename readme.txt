# Старт приложения
sh init.sh

# Переменные окружения для работы
kp_api_token

# Посмотреть работу с uv в django
https://blog.pecar.me/uv-with-django


Django:
- классовые вьюхи

- Формирование карточки #TODO: круды для карточки
- Заменить create_or_update на get_or_create ( в методах добавления фильма)
- Обработка ошибок в кастомных классах

- Подтянуть удаление связанных сущностей при удалении
- Response vs render

Front:
- дефолтный пользователь
- частичная загрузка постеров
    - https://imagekit.io/blog/lazy-loading-images-complete-guide/
    - https://css-loaders.com/time/
    - https://projects.lukehaas.me/css-loaders/
- тосты в based_layout
- класс обработок ошибок

- завершение евента
- формирование евента

- проверить верстку для 4к моника

- Кнопка раскрывания информации о фильме


Спросить Даню:
- кэширование запросов в бд
- автогенерация схемы api

Инфраструктура:
- postgresql
- docker
- edgeDB



Статистика:
- любимый актер/жанр/режисер/сценарист (выводить 3х актеров с самой высокой средней оценкой связанных фильмов)
- самый часто просмотренный актер/жанр/режисер/сценарист
- самый нелюбимый актер/жанр/режисер/сценарист (выводить 3х актеров с самой низкой средней оценкой связанных фильмов)
- долгие vs короткие (разделить фильмы на дольше среднего и короче, вывести средние оценки обоих групп)
- дорогие vs дешевые (так же с бюджетом)
- гистограмма средних оценок по странам
- гистограмма средних оценок по годам/промежуткам
- средняя и самая популярная оценка пользователя
- количество собраний
- общая длина фильмов
- лучшее/худшее собрание (собрание с самой высокой/низкой средней оценкой фильмов на нем)
- дата основания и возраст клуба
- самый противоречивый фильм (фильм с большой разницей между самой высокой и низкой оценкой)
- фильм с самой большой/маленькой суммой оценок

